OpenShadingLanguage 1.00
# Compiled by oslc 1.12.0
# options: -o dist/PxrBump2RoughnessMake.oso
shader PxrBump2RoughnessMake
param	float	inputHeight	0		%meta{string,help,"The input height to bump rough"}  %read{2,2} %write{2147483647,-1} %derivs
param	float	inputHeightMult	0		%meta{string,help,"Multiplier on to the height input"}  %read{4,4} %write{2147483647,-1} %derivs
param	float	inputManifoldS	0		%meta{string,help,"The input s Parameterization"}  %read{10,58} %write{2147483647,-1} %derivs
param	float	inputManifoldT	0		%meta{string,help,"The input t Parameterization"}  %read{11,59} %write{2147483647,-1} %derivs
oparam	float	resultHeightMap	0		%read{69,69} %write{0,62} %initexpr
oparam	normal	resultBumpNormal	0 0 0		%read{2147483647,-1} %write{63,63}
oparam	color	resultNormalMap	0 0 0		%read{2147483647,-1} %write{64,64}
oparam	color	resultD1	0 0 0		%read{2147483647,-1} %write{69,69}
oparam	color	resultD2	0 0 0		%read{2147483647,-1} %write{73,73}
global	point	P	%read{6,32} %write{2147483647,-1} %derivs
global	normal	N	%read{1,53} %write{2147483647,-1} %derivs
local	vector	___337_dQdx	%read{18,46} %write{8,31}
local	vector	___337_dQdy	%read{19,45} %write{9,32}
local	float	___337_A	%read{14,45} %write{10,33}
local	float	___337_B	%read{15,42} %write{11,34}
local	float	___337_C	%read{15,46} %write{12,35}
local	float	___337_D	%read{14,41} %write{13,36}
local	float	___337_invdet	%read{21,48} %write{17,40}
local	vector	dQds	%read{26,28} %write{21,26}
local	vector	dQdt	%read{27,28} %write{25,27}
local	vector	Nn	%read{5,5} %write{1,1} %derivs
local	float	finalHeight	%read{5,62} %write{4,4} %derivs
local	vector	Pbump	%read{8,9} %write{6,6} %derivs
local	vector	Nbump	%read{51,63} %write{29,57}
local	vector	dPds	%read{49,51} %write{44,49}
local	vector	dPdt	%read{50,52} %write{48,50}
local	float	ss	%read{64,65} %write{51,51}
local	float	tt	%read{64,67} %write{52,52}
local	float	nn	%read{55,68} %write{54,54}
local	float	d	%read{61,61} %write{60,61}
local	float	dsdn	%read{69,72} %write{66,66}
local	float	dtdn	%read{69,72} %write{68,68}
const	float	$const1	0		%read{0,0} %write{2147483647,-1}
const	float	$const2	2		%read{2,2} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2} %derivs
const	float	$const3	1		%read{3,40} %write{2147483647,-1}
temp	float	$tmp2	%read{4,4} %write{3,3} %derivs
temp	vector	$tmp3	%read{6,6} %write{5,5} %derivs
const	string	$const4	"partialDeriv"		%read{7,30} %write{2147483647,-1}
temp	float	$tmp4	%read{16,16} %write{14,14}
temp	float	$tmp5	%read{16,16} %write{15,15}
temp	float	$tmp6	%read{17,17} %write{16,16}
temp	vector	$tmp7	%read{20,20} %write{18,18}
temp	vector	$tmp8	%read{20,20} %write{19,19}
temp	vector	$tmp9	%read{21,21} %write{20,20}
temp	vector	$tmp10	%read{24,24} %write{22,22}
temp	vector	$tmp11	%read{24,24} %write{23,23}
temp	vector	$tmp12	%read{25,25} %write{24,24}
temp	vector	$tmp13	%read{29,29} %write{28,28}
temp	float	$tmp14	%read{39,39} %write{37,37}
temp	float	$tmp15	%read{39,39} %write{38,38}
temp	float	$tmp16	%read{40,40} %write{39,39}
temp	vector	$tmp17	%read{43,43} %write{41,41}
temp	vector	$tmp18	%read{43,43} %write{42,42}
temp	vector	$tmp19	%read{44,44} %write{43,43}
temp	vector	$tmp20	%read{47,47} %write{45,45}
temp	vector	$tmp21	%read{47,47} %write{46,46}
temp	vector	$tmp22	%read{48,48} %write{47,47}
temp	normal	$tmp23	%read{54,54} %write{53,53}
const	int	$const5	0		%read{55,55} %write{2147483647,-1}
temp	int	$tmp24	%read{56,56} %write{55,55}
temp	float	$tmp25	%read{60,60} %write{58,58}
temp	float	$tmp26	%read{60,60} %write{59,59}
const	float	$const6	3.14159274		%read{61,61} %write{2147483647,-1}
temp	float	$tmp27	%read{66,66} %write{65,65}
temp	float	$tmp28	%read{68,68} %write{67,67}
temp	float	$tmp29	%read{73,73} %write{70,70}
temp	float	$tmp30	%read{73,73} %write{71,71}
temp	float	$tmp31	%read{73,73} %write{72,72}
code resultHeightMap
# src/PxrBump2RoughnessMake.osl:57
#     output float resultHeightMap = float(0.),
	assign		resultHeightMap $const1 	%filename{"src/PxrBump2RoughnessMake.osl"} %line{57} %argrw{"wr"}
code ___main___
# src/PxrBump2RoughnessMake.osl:66
#     vector Nn = normalize(N);
	normalize	Nn N 	%filename{"src/PxrBump2RoughnessMake.osl"} %line{66} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:67
#     float finalHeight = inputHeightMult*(inputHeight*2.0-1.0);
	mul		$tmp1 inputHeight $const2 	%line{67} %argrw{"wrr"}
	sub		$tmp2 $tmp1 $const3 	%argrw{"wrr"}
	mul		finalHeight inputHeightMult $tmp2 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:68
#     vector Pbump = P+finalHeight*Nn;
	mul		$tmp3 finalHeight Nn 	%line{68} %argrw{"wrr"}
	add		Pbump P $tmp3 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:70
#     partialDeriv(Pbump, inputManifoldS, inputManifoldT, dQds, dQdt);
	functioncall	$const4 26 	%line{70} %argrw{"r"}
# src/PxrBump2Roughness.h:58
#     vector dQdx = Dx(Q);
	Dx		___337_dQdx Pbump 	%filename{"src/PxrBump2Roughness.h"} %line{58} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:59
#     vector dQdy = Dy(Q);
	Dy		___337_dQdy Pbump 	%line{59} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:61
#     float A = Dx(a);
	Dx		___337_A inputManifoldS 	%line{61} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:62
#     float B = Dx(b);
	Dx		___337_B inputManifoldT 	%line{62} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:63
#     float C = Dy(a);
	Dy		___337_C inputManifoldS 	%line{63} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:64
#     float D = Dy(b);
	Dy		___337_D inputManifoldT 	%line{64} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:66
#     float invdet = 1.0/(A*D - B*C);
	mul		$tmp4 ___337_A ___337_D 	%line{66} %argrw{"wrr"}
	mul		$tmp5 ___337_B ___337_C 	%argrw{"wrr"}
	sub		$tmp6 $tmp4 $tmp5 	%argrw{"wrr"}
	div		___337_invdet $const3 $tmp6 	%argrw{"wrr"}
# src/PxrBump2Roughness.h:68
#     dQda = (dQdx*D-dQdy*B)*invdet;
	mul		$tmp7 ___337_dQdx ___337_D 	%line{68} %argrw{"wrr"}
	mul		$tmp8 ___337_dQdy ___337_B 	%argrw{"wrr"}
	sub		$tmp9 $tmp7 $tmp8 	%argrw{"wrr"}
	mul		dQds $tmp9 ___337_invdet 	%argrw{"wrr"}
# src/PxrBump2Roughness.h:69
#     dQdb = (dQdy*A-dQdx*C)*invdet;
	mul		$tmp10 ___337_dQdy ___337_A 	%line{69} %argrw{"wrr"}
	mul		$tmp11 ___337_dQdx ___337_C 	%argrw{"wrr"}
	sub		$tmp12 $tmp10 $tmp11 	%argrw{"wrr"}
	mul		dQdt $tmp12 ___337_invdet 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:71
#     dQds = normalize(dQds);
	normalize	dQds dQds 	%filename{"src/PxrBump2RoughnessMake.osl"} %line{71} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:72
#     dQdt = normalize(dQdt);
	normalize	dQdt dQdt 	%line{72} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:75
#     vector Nbump = normalize(cross(dQds, dQdt));
	cross		$tmp13 dQds dQdt 	%line{75} %argrw{"wrr"}
	normalize	Nbump $tmp13 	%argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:80
#     partialDeriv(P, inputManifoldS, inputManifoldT, dPds, dPdt);
	functioncall	$const4 49 	%line{80} %argrw{"r"}
# src/PxrBump2Roughness.h:58
#     vector dQdx = Dx(Q);
	Dx		___337_dQdx P 	%filename{"src/PxrBump2Roughness.h"} %line{58} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:59
#     vector dQdy = Dy(Q);
	Dy		___337_dQdy P 	%line{59} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:61
#     float A = Dx(a);
	Dx		___337_A inputManifoldS 	%line{61} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:62
#     float B = Dx(b);
	Dx		___337_B inputManifoldT 	%line{62} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:63
#     float C = Dy(a);
	Dy		___337_C inputManifoldS 	%line{63} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:64
#     float D = Dy(b);
	Dy		___337_D inputManifoldT 	%line{64} %argrw{"wr"} %argderivs{1}
# src/PxrBump2Roughness.h:66
#     float invdet = 1.0/(A*D - B*C);
	mul		$tmp14 ___337_A ___337_D 	%line{66} %argrw{"wrr"}
	mul		$tmp15 ___337_B ___337_C 	%argrw{"wrr"}
	sub		$tmp16 $tmp14 $tmp15 	%argrw{"wrr"}
	div		___337_invdet $const3 $tmp16 	%argrw{"wrr"}
# src/PxrBump2Roughness.h:68
#     dQda = (dQdx*D-dQdy*B)*invdet;
	mul		$tmp17 ___337_dQdx ___337_D 	%line{68} %argrw{"wrr"}
	mul		$tmp18 ___337_dQdy ___337_B 	%argrw{"wrr"}
	sub		$tmp19 $tmp17 $tmp18 	%argrw{"wrr"}
	mul		dPds $tmp19 ___337_invdet 	%argrw{"wrr"}
# src/PxrBump2Roughness.h:69
#     dQdb = (dQdy*A-dQdx*C)*invdet;
	mul		$tmp20 ___337_dQdy ___337_A 	%line{69} %argrw{"wrr"}
	mul		$tmp21 ___337_dQdx ___337_C 	%argrw{"wrr"}
	sub		$tmp22 $tmp20 $tmp21 	%argrw{"wrr"}
	mul		dPdt $tmp22 ___337_invdet 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:81
#     dPds = normalize(dPds);
	normalize	dPds dPds 	%filename{"src/PxrBump2RoughnessMake.osl"} %line{81} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:82
#     dPdt = normalize(dPdt);
	normalize	dPdt dPdt 	%line{82} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:84
#     float ss = dot(Nbump, dPds);
	dot		ss Nbump dPds 	%line{84} %argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:85
#     float tt = dot(Nbump, dPdt);
	dot		tt Nbump dPdt 	%line{85} %argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:86
#     float nn = dot(Nbump, normalize(N));
	normalize	$tmp23 N 	%line{86} %argrw{"wr"}
	dot		nn Nbump $tmp23 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:88
#     if (nn < 0){
	lt		$tmp24 nn $const5 	%line{88} %argrw{"wrr"}
	if		$tmp24 58 58 	%argrw{"r"}
# src/PxrBump2RoughnessMake.osl:91
#         Nbump = -Nbump;
	neg		Nbump Nbump 	%line{91} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:94
#     float d = filterwidth(inputManifoldS)*filterwidth(inputManifoldT);
	filterwidth	$tmp25 inputManifoldS 	%line{94} %argrw{"wr"} %argderivs{1}
	filterwidth	$tmp26 inputManifoldT 	%argrw{"wr"} %argderivs{1}
	mul		d $tmp25 $tmp26 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:95
#     d = d*M_PI;
	mul		d d $const6 	%line{95} %argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:98
#     resultHeightMap = finalHeight;
	assign		resultHeightMap finalHeight 	%line{98} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:99
#     resultBumpNormal = Nbump;
	assign		resultBumpNormal Nbump 	%line{99} %argrw{"wr"}
# src/PxrBump2RoughnessMake.osl:100
#     resultNormalMap = color(ss,tt,nn);
	color		resultNormalMap ss tt nn 	%line{100} %argrw{"wrrr"}
# src/PxrBump2RoughnessMake.osl:102
#     float dsdn = -ss/nn; //slope along s
	neg		$tmp27 ss 	%line{102} %argrw{"wr"}
	div		dsdn $tmp27 nn 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:103
#     float dtdn = -tt/nn; //slopt along t
	neg		$tmp28 tt 	%line{103} %argrw{"wr"}
	div		dtdn $tmp28 nn 	%argrw{"wrr"}
# src/PxrBump2RoughnessMake.osl:105
#     resultD1 = color(dsdn, dtdn, resultHeightMap);
	color		resultD1 dsdn dtdn resultHeightMap 	%line{105} %argrw{"wrrr"}
# src/PxrBump2RoughnessMake.osl:106
#     resultD2 = color(dsdn*dsdn, dtdn*dtdn, dsdn*dtdn);
	mul		$tmp29 dsdn dsdn 	%line{106} %argrw{"wrr"}
	mul		$tmp30 dtdn dtdn 	%argrw{"wrr"}
	mul		$tmp31 dsdn dtdn 	%argrw{"wrr"}
	color		resultD2 $tmp29 $tmp30 $tmp31 	%argrw{"wrrr"}
	end
